AudioAnalyzer uses several types of values.
string — some string, restrictions on its content are determined by the place it is used in.
Special enumerations — Some string options have values from a small well defined set. In this documentations these values are denoted as { <value1>, <value2>, <value3> }. Such values are always case-insensitive.
path — string that represents path to some folder in your file system.
boolean — boolean value. Can be "true", "false" or number. If it is number, then 0 is false and all else is true.
float — fractional decimal number
integer — integer decimal number. You can pass a non-integer value, but it will be transformer to integer by rounding towards zero.
color — A set of 3 or 4 numbers that represent color. Numbers correspond to Red, Green, Blue, Alpha channels respectively. Colors are defined by float numbers in range [0.0, 1.0], where 0 corresponds to no value and 1.0 to full brightness. In Rainmeter (and some other programs) numbers are usually defined as integers in range [0, 255]. You can convert such numbers by dividing them by 255. If number is defined as hex value, you can first convert it to decimal and then divide by 255.
<list of suboptions> — a set of named options. Syntax: <name1> <values1> | <name2> <values2>. Same format of description is used by Shape meter.
Names are dependent on context. Values can be anything, that doesn't contain | (pipe symbol), and are also dependent on context. Name is separated from values with a space symbol. Values are also usually separated with spaces, but there are exceptions dependent on context.
<transform description> — A sequence of options separated by spaces.
Possible values are:
filter[attack, decay] — an infinite response time filter. Roughly makes values increase from some unchanging value to another unchanging value in time 'attack' (given in milliseconds) and decrease time 'decay'. Also allowed: filter[attack] — then decay=attack.
db — transform to decibels using formula 10 * log10(value). Values below zero are clamped to a small value so that logarithm is mathematically defined.
map[sourceMin, sourceMax][min, max] — linear interpolation of values from range [sourceMin, sourceMax] to range [min, max]. For example, if you have value 10, then map[0, 30][0, 1] will translate this value into 0.33. Allowed form: map[sourceMin, sourceMax] — then [min, max] == [0, 1].
clamp[min, max] — make sure that values are in range [min, max]. Allowed form: clamp — them [min, max] == [0, 1].

In every place where number (either float or integer) is expected you can you math operations to calculate it.
Supported operations are +-*/^, parentheses are allowed, all numbers are calculated as floating pointer. It you try to divide something by zero, result will be replaced with 0.
For example, you can write "(5*10**2 + 10)*0.7" instead of "357".
